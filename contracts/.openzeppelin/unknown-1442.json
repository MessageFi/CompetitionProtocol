{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x921e9FE73124D7f8fCDBCe8AF5C7dfAe76e12104",
    "txHash": "0xf0ca06a05c7c772586c1701763e6449ce8f972553b69ec18b3b7f2c0f62623fe"
  },
  "proxies": [
    {
      "address": "0x25e6b0b72726199107C3a6cDfdAa0Dc07aFa9759",
      "txHash": "0xb680746b7592b8c28f4c6c1f33250c87542916ed0caf813504a90e6ad3f9fa7f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "83a2a4080ad6282fcb8b2033e909c0324a9df28f1465e99d35466e5cb17ebd88": {
      "address": "0x80C68D00ccB94e1863CdA34F9B07596C935D9D26",
      "txHash": "0x4990d65dde0ea823a3c1d32059180cf155a4162d72bf2463b190162b6b5d5e02",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "totalCompetitions",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "DefaultCompetition",
            "src": "contracts/transparent/DefaultCompetition.sol:58"
          },
          {
            "label": "competitionMapping",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Competition)2423_storage)",
            "contract": "DefaultCompetition",
            "src": "contracts/transparent/DefaultCompetition.sol:60"
          },
          {
            "label": "calculatorMapping",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_contract(ITeller)4018)",
            "contract": "DefaultCompetition",
            "src": "contracts/transparent/DefaultCompetition.sol:62"
          },
          {
            "label": "totalTicketsMapping",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DefaultCompetition",
            "src": "contracts/transparent/DefaultCompetition.sol:63"
          },
          {
            "label": "candidateMapping",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Candidate)2397_storage))",
            "contract": "DefaultCompetition",
            "src": "contracts/transparent/DefaultCompetition.sol:65"
          },
          {
            "label": "voterMapping",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Voter)2402_storage)))",
            "contract": "DefaultCompetition",
            "src": "contracts/transparent/DefaultCompetition.sol:68"
          },
          {
            "label": "rewardIsWithdraw",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "DefaultCompetition",
            "src": "contracts/transparent/DefaultCompetition.sol:71"
          },
          {
            "label": "checkIndex",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "AutoDistributionCompetition",
            "src": "contracts/transparent/AutoDistributionCompetition.sol:19"
          },
          {
            "label": "checkStatus",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "AutoDistributionCompetition",
            "src": "contracts/transparent/AutoDistributionCompetition.sol:21"
          },
          {
            "label": "voters",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "LuckyVoterCompetition",
            "src": "contracts/transparent/LuckyVoterCompetition.sol:23"
          },
          {
            "label": "luckyPrizes",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "LuckyVoterCompetition",
            "src": "contracts/transparent/LuckyVoterCompetition.sol:24"
          },
          {
            "label": "vrfRequests",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "LuckyVoterCompetition",
            "src": "contracts/transparent/LuckyVoterCompetition.sol:26"
          },
          {
            "label": "COORDINATOR",
            "offset": 0,
            "slot": "213",
            "type": "t_contract(VRFCoordinatorV2Interface)153",
            "contract": "LuckyVoterCompetition",
            "src": "contracts/transparent/LuckyVoterCompetition.sol:29"
          },
          {
            "label": "subscriptionId",
            "offset": 20,
            "slot": "213",
            "type": "t_uint64",
            "contract": "LuckyVoterCompetition",
            "src": "contracts/transparent/LuckyVoterCompetition.sol:31"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "214",
            "type": "t_bytes32",
            "contract": "LuckyVoterCompetition",
            "src": "contracts/transparent/LuckyVoterCompetition.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1421": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ITeller)4018": {
            "label": "contract ITeller",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)153": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Voter)2402_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct Structs.Voter)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_contract(ITeller)4018)": {
            "label": "mapping(uint256 => contract ITeller)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Candidate)2397_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Structs.Candidate))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Voter)2402_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Structs.Voter))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Candidate)2397_storage)": {
            "label": "mapping(uint256 => struct Structs.Candidate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Competition)2423_storage)": {
            "label": "mapping(uint256 => struct Structs.Competition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Voter)2402_storage)": {
            "label": "mapping(uint256 => struct Structs.Voter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Candidate)2397_storage": {
            "label": "struct Structs.Candidate",
            "members": [
              {
                "label": "tickets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "player",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Competition)2423_storage": {
            "label": "struct Structs.Competition",
            "members": [
              {
                "label": "host",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewards",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "winners",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rewardCoin",
                "type": "t_contract(IERC20)1421",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ticketCoin",
                "type": "t_contract(IERC20)1421",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalCandidates",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "startTime",
                "type": "t_uint64",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "endTime",
                "type": "t_uint64",
                "offset": 8,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Voter)2402_storage": {
            "label": "struct Structs.Voter",
            "members": [
              {
                "label": "tickets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isWithdraw",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
